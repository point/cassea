
#user  nobody;
user	www www;
worker_processes  2;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
error_log /var/log/nginx-error.log;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
	client_max_body_size 4m;

    log_format  main  '$remote_addr - $remote_user [$time_local] $request '
                      '"$status" $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;
	gzip_comp_level		5;
	#gzip_min_length		1100;
	gzip_buffers		4 8k;
	gzip_types			text/plain text/html application/x-javascript text/css

	ignore_invalid_headers on;


	open_file_cache max=1000 inactive=20s;
	open_file_cache_valid 30s;
	open_file_cache_min_uses 2;
	open_file_cache_errors on;

    }

	server {
		expires       -1;
		add_header  Cache-Control: no-cache;
		listen		 80;
		server_name  intvideo;

        access_log  /var/log/nginx/intvideo.access.log  main;

		charset utf-8;

		set $server_root /usr/local/www/intvideo;
		root $server_root;
        client_max_body_size 8m;

        index index.php index.html;

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   403 500 502 503 504  /50x.html;
        location = /50x.html {
		    root $server_root/web/error_pages;
        }

  
        location /
        {
            rewrite '^/(robots.txt|sitemap[^\.]*.xml(.gz)?)$' /web/$1 last;

            set $controller index;
            # добавляем последний слеш к контроллеру или p2 или языку            
            rewrite  '^([^\.?&]*[^/])([?&#].*)?$' $1/$2;
            # language
            rewrite '^/([a-z]{2})(/.*)$' $2?__lang=$1;
            # добавлем страницу по умолчанию после /
            rewrite  '^(.*)/([?&#].*)?$' $1/index.xml$2;

             #controller 
            if ($uri ~* '^/([^/\.]{3,})(/.*)$' ){
                set $controller $1;
            }
               

            #  нет контроллера - идем папку в /web
            if (!-f  $server_root/controllers/$controller.php){
                rewrite ^(.*)$ /web$1 last;
            }
            # конролеер есть, но страница имеет расширение отличное от html, htm, xml
            if ($uri !~* '^.*\.(htm|html|xml)$'){
                rewrite ^(.*)$ /web$1 last;
            }
            if ($uri ~* '^/([^/\.]{1,2})/.*$' )
			{
				return 404;
			}
            
            # дописываем контроллер index, 
            if ($uri !~* '^/([^/\.]{3,})(/.*)$' ){
                rewrite ^(.*)$ /$controller$1;
            }
           
            rewrite  '^/([^/\.]{3,})(/([^\.]+))?(/([^/]+)\.(htm|html|xml)?)?$'  /controllers/$controller.php?__p1=$5&__p2=$3 last;
            return 404;
        }

        location /web{
            internal;
            if (-f $server_root$uri){
                rewrite ^(.*)$ $1 break;
            }
            rewrite '^/web/(.*\.(jpg$|jpeg$|png$|gif$|ico))$' /web/images/$1 break;
            rewrite ^/web/(.*\.js)$ /web/js/$1 break;
            rewrite ^/web/(.*\.css)$ /web/css/$1 break;
            rewrite ^/web/(.*\.swf)$ /web/flash/$1 break;
            return 404;
        }



        location /controllers/{ 
            internal;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_intercept_errors on;
            if (!-f $server_root$fastcgi_script_name)
            {
                return 401;
            }
            fastcgi_param  SCRIPT_FILENAME  $server_root$fastcgi_script_name;
            include fastcgi_params;
        }

        #location ~* (\.jpg$|\.jpeg$|\.png$|\.gif$|\.bmp|\.ico$)
        #{
        #    root $server_root/web/images;
            #expires 1y;
            #expires max;
        #}
 

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        location ~ /\.ht {
            deny  all;
        }
    }

}
